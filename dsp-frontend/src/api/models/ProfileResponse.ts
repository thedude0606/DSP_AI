/* tslint:disable */
/* eslint-disable */
/**
 * Amazon Ads API - Profiles
 * Profiles represent an advertiser and their account\'s marketplace, and are used in all subsequent API calls via a management scope, `Amazon-Advertising-API-Scope`. Reports and all entity management operations are associated with a single profile. Advertisers cannot have more than one profile for each marketplace.  Advertisers who operate in more than one marketplace (for example, Amazon.com, Amazon.co.uk, Amazon.co.jp) will have only one profile associated with each marketplace. [**See this link**](https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints) for a list of marketplaces associated with each endpoint.  To retrieve your profile IDs, call the listProfiles operation, and include a valid authorization access token in the header. Use a `profileId` from the returned list as the value for the management scope (`Amazon-Advertising-API-Scope`) in the headers for subsequent API calls.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProfileResponse
 */
export interface ProfileResponse {
    /**
     * 
     * @type {number}
     * @memberof ProfileResponse
     */
    profileId?: number;
    /**
     * 
     * @type {string}
     * @memberof ProfileResponse
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof ProfileResponse
     */
    details?: string;
}

/**
 * Check if a given object implements the ProfileResponse interface.
 */
export function instanceOfProfileResponse(value: object): value is ProfileResponse {
    return true;
}

export function ProfileResponseFromJSON(json: any): ProfileResponse {
    return ProfileResponseFromJSONTyped(json, false);
}

export function ProfileResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'profileId': json['profileId'] == null ? undefined : json['profileId'],
        'code': json['code'] == null ? undefined : json['code'],
        'details': json['details'] == null ? undefined : json['details'],
    };
}

export function ProfileResponseToJSON(json: any): ProfileResponse {
    return ProfileResponseToJSONTyped(json, false);
}

export function ProfileResponseToJSONTyped(value?: ProfileResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'profileId': value['profileId'],
        'code': value['code'],
        'details': value['details'],
    };
}

